{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomas\\\\Documents\\\\F22\\\\Radio\\\\intern_project\\\\client\\\\src\\\\ProfilePage.js\";\nimport \"./ProfilePage.css\";\nimport React from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { getToken } from \"./spotify.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ProfilePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      spotify: new SpotifyWebApi(),\n      authenticated: false,\n      displayName: \"\",\n      topArtists: []\n    };\n  }\n  componentDidMount() {\n    const token = getToken();\n    this.state.spotify.setAccessToken(token);\n\n    // There are multiple ways to fetch data from a user's Spotify profile\n    // This is one such way, see below for more documentation\n    // https://github.com/thelinmichael/spotify-web-api-node\n\n    this.state.spotify.getMe().then(me => this.setState({\n      displayName: me.display_name\n    }), error => console.log(\"Error loading profile data: \", error));\n    this.state.spotify.getMyTopArtists({\n      limit: 10\n    }).then(artistsData => {\n      let artists = [];\n      artistsData.items.forEach(artist => artists.push(artist.name));\n      this.setState({\n        topArtists: artists,\n        authenticated: true\n      });\n    }, error => console.log(\"Error loading top artists: \", error));\n  }\n  render() {\n    // If the user isn't fully authenticated, don't render anything yet\n    // This shouldn't be the case for longer than a fraction of a second\n    if (!this.state.authenticated) return null;\n\n    // Log out by navigating back to the home page\n    const logout = () => this.props.navigate(\"/\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Logged in as \", this.state.displayName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Artist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.topArtists.map((artist, position) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: position + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: artist\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this)]\n            }, artist, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default ProfilePage;","map":{"version":3,"names":["React","SpotifyWebApi","getToken","ProfilePage","Component","constructor","props","state","spotify","authenticated","displayName","topArtists","componentDidMount","token","setAccessToken","getMe","then","me","setState","display_name","error","console","log","getMyTopArtists","limit","artistsData","artists","items","forEach","artist","push","name","render","logout","navigate","map","position"],"sources":["C:/Users/tomas/Documents/F22/Radio/intern_project/client/src/ProfilePage.js"],"sourcesContent":["import \"./ProfilePage.css\";\r\nimport React from \"react\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nimport { getToken } from \"./spotify.js\";\r\n\r\nclass ProfilePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            spotify: new SpotifyWebApi(),\r\n            authenticated: false,\r\n            displayName: \"\",\r\n            topArtists: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const token = getToken();\r\n        this.state.spotify.setAccessToken(token);\r\n\r\n        // There are multiple ways to fetch data from a user's Spotify profile\r\n        // This is one such way, see below for more documentation\r\n        // https://github.com/thelinmichael/spotify-web-api-node\r\n\r\n        this.state.spotify.getMe().then(\r\n            (me) => this.setState({ displayName: me.display_name }),\r\n            (error) => console.log(\"Error loading profile data: \", error)\r\n        );\r\n\r\n        this.state.spotify\r\n            .getMyTopArtists({\r\n                limit: 10,\r\n            })\r\n            .then(\r\n                (artistsData) => {\r\n                    let artists = [];\r\n                    artistsData.items.forEach((artist) =>\r\n                        artists.push(artist.name)\r\n                    );\r\n\r\n                    this.setState({\r\n                        topArtists: artists,\r\n                        authenticated: true,\r\n                    });\r\n                },\r\n                (error) => console.log(\"Error loading top artists: \", error)\r\n            );\r\n    }\r\n\r\n    render() {\r\n        // If the user isn't fully authenticated, don't render anything yet\r\n        // This shouldn't be the case for longer than a fraction of a second\r\n        if (!this.state.authenticated) return null;\r\n\r\n        // Log out by navigating back to the home page\r\n        const logout = () => this.props.navigate(\"/\");\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <h3>Logged in as {this.state.displayName}</h3>\r\n\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Artist</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.topArtists.map((artist, position) => {\r\n                            return (\r\n                                <tr key={artist}>\r\n                                    <td>{position + 1}</td>\r\n                                    <td>{artist}</td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <br />\r\n\r\n                <button onClick={logout}>Logout</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfilePage;\r\n"],"mappings":";AAAA,OAAO,mBAAmB;AAC1B,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,SAASC,QAAQ,QAAQ,cAAc;AAAC;AAExC,MAAMC,WAAW,SAASH,KAAK,CAACI,SAAS,CAAC;EACtCC,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,OAAO,EAAE,IAAIP,aAAa,EAAE;MAC5BQ,aAAa,EAAE,KAAK;MACpBC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE;IAChB,CAAC;EACL;EAEAC,iBAAiB,GAAG;IAChB,MAAMC,KAAK,GAAGX,QAAQ,EAAE;IACxB,IAAI,CAACK,KAAK,CAACC,OAAO,CAACM,cAAc,CAACD,KAAK,CAAC;;IAExC;IACA;IACA;;IAEA,IAAI,CAACN,KAAK,CAACC,OAAO,CAACO,KAAK,EAAE,CAACC,IAAI,CAC1BC,EAAE,IAAK,IAAI,CAACC,QAAQ,CAAC;MAAER,WAAW,EAAEO,EAAE,CAACE;IAAa,CAAC,CAAC,EACtDC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,KAAK,CAAC,CAChE;IAED,IAAI,CAACb,KAAK,CAACC,OAAO,CACbe,eAAe,CAAC;MACbC,KAAK,EAAE;IACX,CAAC,CAAC,CACDR,IAAI,CACAS,WAAW,IAAK;MACb,IAAIC,OAAO,GAAG,EAAE;MAChBD,WAAW,CAACE,KAAK,CAACC,OAAO,CAAEC,MAAM,IAC7BH,OAAO,CAACI,IAAI,CAACD,MAAM,CAACE,IAAI,CAAC,CAC5B;MAED,IAAI,CAACb,QAAQ,CAAC;QACVP,UAAU,EAAEe,OAAO;QACnBjB,aAAa,EAAE;MACnB,CAAC,CAAC;IACN,CAAC,EACAW,KAAK,IAAKC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,KAAK,CAAC,CAC/D;EACT;EAEAY,MAAM,GAAG;IACL;IACA;IACA,IAAI,CAAC,IAAI,CAACzB,KAAK,CAACE,aAAa,EAAE,OAAO,IAAI;;IAE1C;IACA,MAAMwB,MAAM,GAAG,MAAM,IAAI,CAAC3B,KAAK,CAAC4B,QAAQ,CAAC,GAAG,CAAC;IAE7C,oBACI;MAAK,SAAS,EAAC,SAAS;MAAA,wBACpB;QAAA,4BAAkB,IAAI,CAAC3B,KAAK,CAACG,WAAW;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eAE9C;QAAA,wBACI;UAAA,uBACI;YAAA,uBACI;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAe;YAAA;YAAA;YAAA;UAAA;QACd;UAAA;UAAA;UAAA;QAAA,QACD,eACR;UAAA,UACK,IAAI,CAACH,KAAK,CAACI,UAAU,CAACwB,GAAG,CAAC,CAACN,MAAM,EAAEO,QAAQ,KAAK;YAC7C,oBACI;cAAA,wBACI;gBAAA,UAAKA,QAAQ,GAAG;cAAC;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eACvB;gBAAA,UAAKP;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QAAM;YAAA,GAFZA,MAAM;cAAA;cAAA;cAAA;YAAA,QAGV;UAEb,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QACE;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ,eAER;QAAA;QAAA;QAAA;MAAA,QAAM,eAEN;QAAQ,OAAO,EAAEI,MAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QACtC;EAEd;AACJ;AAEA,eAAe9B,WAAW"},"metadata":{},"sourceType":"module"}